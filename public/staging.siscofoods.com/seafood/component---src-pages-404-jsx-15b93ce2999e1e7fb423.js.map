{"version":3,"sources":["webpack:///./src/pages/404.jsx","webpack:///./src/components/seo.jsx"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_seo__WEBPACK_IMPORTED_MODULE_1__","NotFoundPage","a","createElement","Fragment","title","SEO","_ref","description","lang","meta","site","_public_static_d_3978990474_json__WEBPACK_IMPORTED_MODULE_0__","data","metaTitle","siteMetadata","metaDescription","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","htmlAttributes","name","content","property","concat","defaultProps"],"mappings":"0FAAAA,EAAAC,EAAAC,GAAA,IAAAC,EAAAH,EAAA,GAAAI,EAAAJ,EAAAK,EAAAF,GAAAG,EAAAN,EAAA,KAWeO,UARM,kBACnBH,EAAAI,EAAAC,cAAAL,EAAAI,EAAAE,SAAA,KACEN,EAAAI,EAAAC,cAACH,EAAA,EAAD,CAAKK,MAAM,mBACXP,EAAAI,EAAAC,cAAA,uBACAL,EAAAI,EAAAC,cAAA,uJCKJ,SAASG,EAATC,GAAiD,IAAlCC,EAAkCD,EAAlCC,YAAaC,EAAqBF,EAArBE,KAAMC,EAAeH,EAAfG,KAAML,EAASE,EAATF,MAC9BM,EADuCC,EAAAC,KACvCF,KAaFG,EAAYT,GAASM,EAAKI,aAAaV,MACvCW,EAAkBR,GAAeG,EAAKI,aAAaP,YAEzD,OACES,EAAAf,EAAAC,cAACe,EAAAhB,EAAD,CACEiB,eAAgB,CACdV,QAEFJ,MAAOS,EAEPJ,KAAM,CACJ,CACEU,KAAI,cACJC,QAASL,GAEX,CACEM,SAAQ,WACRD,QAAShB,GAEX,CACEiB,SAAQ,iBACRD,QAASL,GAEX,CACEM,SAAQ,UACRD,QAAO,YAETE,OAAOb,KAKfJ,EAAIkB,aAAe,CACjBf,KAAI,KACJC,KAAM,GACNF,YAAW,IAUEF","file":"component---src-pages-404-jsx-15b93ce2999e1e7fb423.js","sourcesContent":["import React from 'react';\nimport SEO from '@components/seo';\n\nconst NotFoundPage = () => (\n  <>\n    <SEO title=\"404: Not found\" />\n    <h1>NOT FOUND</h1>\n    <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\n  </>\n);\n\nexport default NotFoundPage;\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n          }\n        }\n      }\n    `\n  )\n\n  const metaTitle = title || site.siteMetadata.title\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={metaTitle}\n      // titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n"],"sourceRoot":""}